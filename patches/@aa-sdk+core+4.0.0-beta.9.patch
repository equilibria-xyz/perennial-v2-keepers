diff --git a/node_modules/@aa-sdk/core/dist/esm/actions/smartAccount/waitForUserOperationTransacation.js b/node_modules/@aa-sdk/core/dist/esm/actions/smartAccount/waitForUserOperationTransacation.js
index 08ee28d..16e0ccb 100644
--- a/node_modules/@aa-sdk/core/dist/esm/actions/smartAccount/waitForUserOperationTransacation.js
+++ b/node_modules/@aa-sdk/core/dist/esm/actions/smartAccount/waitForUserOperationTransacation.js
@@ -54,3 +54,33 @@ export const waitForUserOperationTransaction = async (client, args) => {
     throw new FailedToFindTransactionError(hash);
 };
 //# sourceMappingURL=waitForUserOperationTransacation.js.map
+
+export const waitForUserOperationReceipt = async (client, args) => {
+    if (!isBaseSmartAccountClient(client)) {
+        throw new IncompatibleClientError("BaseSmartAccountClient", "waitForUserOperationTransaction", client);
+    }
+    const { hash, retries = {
+        maxRetries: client.txMaxRetries,
+        intervalMs: client.txRetryIntervalMs,
+        multiplier: client.txRetryMultiplier,
+    }, } = args;
+    for (let i = 0; i < retries.maxRetries; i++) {
+        const txRetryIntervalWithJitterMs = retries.intervalMs * Math.pow(retries.multiplier, i) +
+            Math.random() * 100;
+        await new Promise((resolve) => setTimeout(resolve, txRetryIntervalWithJitterMs));
+        const receipt = await client
+            .getUserOperationReceipt(hash)
+            .catch((e) => {
+            Logger.error(`[SmartAccountProvider] waitForUserOperationTransaction error fetching receipt for ${hash}: ${e}`);
+        });
+        if (receipt) {
+            return getTransaction(client, {
+                hash: receipt.receipt.transactionHash,
+            }).then((tx) => ({
+              hash: tx.hash,
+              userOpReceipt: receipt
+            }));
+        }
+    }
+    throw new FailedToFindTransactionError(hash);
+};
diff --git a/node_modules/@aa-sdk/core/dist/esm/index.js b/node_modules/@aa-sdk/core/dist/esm/index.js
index fa6e071..6611b78 100644
--- a/node_modules/@aa-sdk/core/dist/esm/index.js
+++ b/node_modules/@aa-sdk/core/dist/esm/index.js
@@ -12,7 +12,7 @@ export { dropAndReplaceUserOperation } from "./actions/smartAccount/dropAndRepla
 export { sendTransaction } from "./actions/smartAccount/sendTransaction.js";
 export { sendTransactions } from "./actions/smartAccount/sendTransactions.js";
 export { sendUserOperation } from "./actions/smartAccount/sendUserOperation.js";
-export { waitForUserOperationTransaction } from "./actions/smartAccount/waitForUserOperationTransacation.js";
+export { waitForUserOperationTransaction, waitForUserOperationReceipt } from "./actions/smartAccount/waitForUserOperationTransacation.js";
 export { createBundlerClient, createBundlerClientFromExisting, } from "./client/bundlerClient.js";
 export { bundlerActions } from "./client/decorators/bundlerClient.js";
 export { smartAccountClientActions } from "./client/decorators/smartAccountClient.js";
diff --git a/node_modules/@aa-sdk/core/dist/types/index.d.ts b/node_modules/@aa-sdk/core/dist/types/index.d.ts
index 24c5baf..75d8816 100644
--- a/node_modules/@aa-sdk/core/dist/types/index.d.ts
+++ b/node_modules/@aa-sdk/core/dist/types/index.d.ts
@@ -16,7 +16,7 @@ export { sendTransaction } from "./actions/smartAccount/sendTransaction.js";
 export { sendTransactions } from "./actions/smartAccount/sendTransactions.js";
 export { sendUserOperation } from "./actions/smartAccount/sendUserOperation.js";
 export type * from "./actions/smartAccount/types.js";
-export { waitForUserOperationTransaction } from "./actions/smartAccount/waitForUserOperationTransacation.js";
+export { waitForUserOperationTransaction, waitForUserOperationReceipt } from "./actions/smartAccount/waitForUserOperationTransacation.js";
 export type * from "./client/bundlerClient.js";
 export { createBundlerClient, createBundlerClientFromExisting, } from "./client/bundlerClient.js";
 export type * from "./client/decorators/bundlerClient.js";
