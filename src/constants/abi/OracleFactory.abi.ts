export const OracleFactoryAbi = [
  {
    inputs: [{ internalType: 'address', name: 'implementation_', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'FactoryNotInstanceError', type: 'error' },
  {
    inputs: [{ internalType: 'uint256', name: 'version', type: 'uint256' }],
    name: 'InitializableAlreadyInitializedError',
    type: 'error',
  },
  { inputs: [], name: 'InitializableNotInitializingError', type: 'error' },
  { inputs: [], name: 'InitializableZeroVersionError', type: 'error' },
  { inputs: [], name: 'OracleFactoryAlreadyCreatedError', type: 'error' },
  { inputs: [], name: 'OracleFactoryClaimTooLargeError', type: 'error' },
  { inputs: [], name: 'OracleFactoryInvalidIdError', type: 'error' },
  { inputs: [], name: 'OracleFactoryNotCreatedError', type: 'error' },
  { inputs: [], name: 'OracleFactoryNotRegisteredError', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'sender', type: 'address' }],
    name: 'OwnableNotOwnerError',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'sender', type: 'address' }],
    name: 'OwnableNotPendingOwnerError',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'sender', type: 'address' }],
    name: 'PausableNotPauserError',
    type: 'error',
  },
  { inputs: [], name: 'PausablePausedError', type: 'error' },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'contract IFactory', name: 'caller', type: 'address' }],
    name: 'CallerAuthorized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'contract IOracleProviderFactory', name: 'factory', type: 'address' }],
    name: 'FactoryRegistered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint256', name: 'version', type: 'uint256' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'contract IInstance', name: 'instance', type: 'address' }],
    name: 'InstanceRegistered',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'UFixed6', name: 'newMaxClaim', type: 'uint256' }],
    name: 'MaxClaimUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'contract IOracleProvider', name: 'oracle', type: 'address' },
      { indexed: true, internalType: 'bytes32', name: 'id', type: 'bytes32' },
    ],
    name: 'OracleCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'OwnerUpdated',
    type: 'event',
  },
  { anonymous: false, inputs: [], name: 'Paused', type: 'event' },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'newPauser', type: 'address' }],
    name: 'PauserUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'newPendingOwner', type: 'address' }],
    name: 'PendingOwnerUpdated',
    type: 'event',
  },
  { anonymous: false, inputs: [], name: 'Unpaused', type: 'event' },
  { inputs: [], name: 'acceptOwner', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [{ internalType: 'contract IFactory', name: 'caller', type: 'address' }],
    name: 'authorize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'caller', type: 'address' }],
    name: 'authorized',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract IFactory', name: '', type: 'address' }],
    name: 'callers',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'UFixed6', name: 'amount', type: 'uint256' }],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'id', type: 'bytes32' },
      { internalType: 'contract IOracleProviderFactory', name: 'factory', type: 'address' },
    ],
    name: 'create',
    outputs: [{ internalType: 'contract IOracle', name: 'newOracle', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract IOracleProviderFactory', name: '', type: 'address' }],
    name: 'factories',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract IMarket', name: 'market', type: 'address' }],
    name: 'fund',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'implementation',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'incentive',
    outputs: [{ internalType: 'Token18', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'Token18', name: 'incentive_', type: 'address' }],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract IInstance', name: 'instance', type: 'address' }],
    name: 'instances',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxClaim',
    outputs: [{ internalType: 'UFixed6', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    name: 'oracles',
    outputs: [{ internalType: 'contract IOracleProvider', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'pause', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [],
    name: 'paused',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauser',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract IOracleProviderFactory', name: 'factory', type: 'address' }],
    name: 'register',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'unpause', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'bytes32', name: 'id', type: 'bytes32' },
      { internalType: 'contract IOracleProviderFactory', name: 'factory', type: 'address' },
    ],
    name: 'update',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'UFixed6', name: 'newMaxClaim', type: 'uint256' }],
    name: 'updateMaxClaim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newPauser', type: 'address' }],
    name: 'updatePauser',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newPendingOwner', type: 'address' }],
    name: 'updatePendingOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const
